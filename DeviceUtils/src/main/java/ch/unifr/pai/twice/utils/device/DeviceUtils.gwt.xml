<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Google Inc.//DTD Google Web Toolkit 2.4.0//EN" "http://google-web-toolkit.googlecode.com/svn/tags/2.4.0/distro-source/core/src/gwt-module.dtd">
<!-- 
 Copyright 2013 Oliver Schmid
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 
 http://www.apache.org/licenses/LICENSE-2.0
  
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<module>
	<inherits name="com.google.gwt.user.User" />
	<source path="client" />

	<property-provider name="user.agent"
		generator="ch.unifr.pai.twice.utils.device.rebind.EnableUnsupportedBrowsers" />
	<set-configuration-property name="user.agent.runtimeWarning"
		value="false" />

	<!-- Determine if we are in a mobile browser. -->
	<define-property name="deviceType" values="cursor,multicursor,mccapable,touch" />
	<property-provider name="deviceType">
  <![CDATA[
  	  if(window.sessionStorage){
  	     var type = window.sessionStorage.getItem('ch.unifr.pai.twice.deviceType');
  	     if(type!=null){
  	     	return type;
  	     }
  	  }
  	  var args = location.search;
      var start = args.indexOf("deviceType");
      if (start >= 0) {
        var value = args.substring(start);
        var begin = value.indexOf("=") + 1;
        var end = value.indexOf("&");
        if (end == -1) {	
          end = value.length;
        }
        return value.substring(begin, end);
      }
      var ua = window.navigator.userAgent.toLowerCase();
      if (ua.indexOf("multipointer") != -1) {
        return "multicursor";
      }
      else if (ua.indexOf("android") != -1){
      	//Firefox Mobile 6 doesn't respond correctly to the "ontouchevent" therefore, this is a little hack since not all android devices have to be touch devices - but most of them are
      	return "touch";
      }
      if ("ontouchstart" in window.document.documentElement) {
      	return "touch";
      }
      else if("WebSocket" in window && window.document.createEvent){
      	return "mccapable";
      }
      else{
      	return "cursor";
      }
  ]]>
	</property-provider>
	<define-property name="specialDevice" values="nintendods,none" />
	<property-provider name="specialDevice">
  <![CDATA[
  	  if(window.sessionStorage){
  	     var type = window.sessionStorage.getItem('ch.unifr.pai.twice.specialDevice');
  	     if(type!=null){
  	     	return type;
  	     }
  	  }
  	  var args = location.search;
      var start = args.indexOf("specialDevice");
      if (start >= 0) {
        var value = args.substring(start);
        var begin = value.indexOf("=") + 1;
        var end = value.indexOf("&");
        if (end == -1) {	
          end = value.length;
        }
        return value.substring(begin, end);
      }
      var ua = window.navigator.userAgent.toLowerCase();
      if (ua.indexOf("nintendo") != -1) {
        return "nintendods";
      }
      else{
       	return "none";
      }
  ]]>
	</property-provider>

	<replace-with
		class="ch.unifr.pai.twice.utils.device.client.deviceType.MultiCursorDeviceTypeProvider">
		<when-type-is class="ch.unifr.pai.twice.utils.device.client.deviceType.DeviceTypeProvider" />
		<when-property-is name="deviceType" value="multicursor" />
	</replace-with>
	<replace-with
		class="ch.unifr.pai.twice.utils.device.client.deviceType.TouchDeviceTypeProvider">
		<when-type-is class="ch.unifr.pai.twice.utils.device.client.deviceType.DeviceTypeProvider" />
		<when-property-is name="deviceType" value="touch" />
	</replace-with>
</module>